<?php
/**
 * @file
 */

/*
 * Implements hook_menu()
 */
function bosa_iframe_menu(){
  $items = array();

  $items['bosa/iframe'] = array(
    'page callback' => 'bosa_iframe_view',
    'access arguments' => array('access content'), 
  );

  $items['admin/bosa/bosa_iframe'] = array(
    'title' => 'BOSA Iframe Builder',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('bosa_iframe_form_all'),
    'access arguments' => array('access content'),
  );
  return $items;
}
function bosa_iframe_form_all($form, &$form_state) {
  if (!isset($form_state['stage']))
    $form_state['stage'] = 'get_form';

  switch ($form_state['stage']) {
    default:
      return bosa_iframe_form($form, $form_state);
     break;
  }
  return $form;
}
function bosa_iframe_form($form, &$form_state){

  $values = isset($form_state['multistep_values']['get_form']) ? $form_state['multistep_values']['get_form'] : array();
  $size = array(
    '1' => t('Stor'),
    '2' => t('Lille'),
  );
  $form['bosa_iframe_form']['bosa_iframe_size'] = array(
    '#type' => 'radios',
    '#title' => t('Size'),
    '#options' => $size,
    '#default_value' => isset($values['bosa_iframe_size']) ? $values['bosa_iframe_size'] : 1,
    //'#description' => t('Check or uncheck the respective fields'),
  );
  $form['bosa_iframe_form']['bosa_iframe_amount'] = array(
    '#type' => 'textfield',
    '#title' => "Antal",
    '#default_value' => isset($values['bosa_iframe_amount']) ? $values['bosa_iframe_amount'] : '',
  );
  $form['bosa_iframe_form']['bosa_iframe_random'] = array(
    '#type' => 'checkbox',
    '#title' => 'Vis '. t('Random'),
    '#default_value' => isset($values['bosa_iframe_random']) ? $values['bosa_iframe_random'] : '',
  );

  $vocabulary = taxonomy_vocabulary_machine_name_load('geografi');
  $terms = taxonomy_get_tree($vocabulary->vid);
  $geografi = array( 0 => '--');
  foreach($terms as $term) {
    $geografi[$term->tid] = $term->name;
  }

  $vocabulary = taxonomy_vocabulary_machine_name_load('offer_type');
  $terms = taxonomy_get_tree($vocabulary->vid);
  $offer_type = array( 0 => '--');
  foreach($terms as $term) {
    $offer_type[$term->tid] = $term->name;
  }
  $vocabulary = taxonomy_vocabulary_machine_name_load('sale');
  $terms = taxonomy_get_tree($vocabulary->vid);
  $sal = array(0 => '--');
  foreach($terms as $term) {
    $sal[$term->tid] = $term->name;
  }
  $form['bosa_iframe_form']['bosa_iframe_category_1'] = array(
    '#type' => 'select',
    '#title' => 'Kategori (geografi)',
    '#options' => $geografi,
    '#default_value' => isset($values['bosa_iframe_category_1']) ? $values['bosa_iframe_category_1'] : NULL,
  );
  $form['bosa_iframe_form']['bosa_iframe_category_2'] = array(
    '#type' => 'select',
    '#title' => "Kategori (t&#229;rn)",
    '#options' => $offer_type,
    '#default_value' => isset($values['bosa_iframe_category_2']) ? $values['bosa_iframe_category_2'] : NULL,
  );
  $form['bosa_iframe_form']['bosa_iframe_category_3'] = array(
    '#type' => 'select',
    '#title' => 'Kategori (sal)',
    '#options' => $sal,
    '#default_value' => isset($values['bosa_iframe_category_3']) ? $values['bosa_iframe_category_3'] : NULL,
  );
  $form['bosa_iframe_form']['bosa_iframe_ids'] = array(
    '#type' => 'textfield',
    '#title' => "Visnings id'er ",
    '#description' =>"f. eks. 238,193",
    '#default_value' => isset($values['bosa_iframe_ids']) ? $values['bosa_iframe_ids'] : NULL,
  );
  $form['bosa_iframe_form']['bosa_iframe_submit'] = array(
    '#type' => 'submit',
    '#value' => t('Generer!'),
  );
  if($form_state['complete']) {
    $amount = $values['bosa_iframe_amount'] ? $values['bosa_iframe_amount']  : 4;
    $ca_geo = $values['bosa_iframe_category_1'] ? $values['bosa_iframe_category_1'] : 'all';
    $ca_tower = $values['bosa_iframe_category_2'] ? $values['bosa_iframe_category_2'] : 'all';
    $ca_sal = $values['bosa_iframe_category_3'] ? $values['bosa_iframe_category_3'] : 'all';
    $ids = $values['bosa_iframe_ids'] ? $values['bosa_iframe_ids'] : '';
    $size = isset($values['bosa_iframe_size']) ? $values['bosa_iframe_size'] : 1;
    $random = isset($values['bosa_iframe_random']) ? $values['bosa_iframe_random'] : '';
    //TODO size & random

    global $base_url;
    // default.
    if(!$ca_geo && !$ca_tower && !$ca_sal && !$ids) {
      $html = '<iframe src="'.$base_url.'/bosa/iframe/product/r/'.$amount.'" width="100%" height="500"></iframe>';
    }
    elseif (!$ids) {
      if (!$ca_geo) {
        $html = '<iframe src="'.$base_url.'/bosa/iframe/product/r/'.$amount.'" width="100%" height="500"></iframe>';
      }
      else {
        $html = '<iframe src="'.$base_url.'/bosa/iframe/category_new/'.$amount.'/'.$ca_geo.'/'.$ca_tower.'/'.$ca_sal;
        $html .= '" width="100%" height="500"></iframe>';
      }
    }

    // overwrite other value.
    if ($ids != '') {
      $html='<iframe src="'.$base_url.'/bosa/iframe/product/s/'.$ids.'" width="100%" height="500"></iframe>';
    }
    $form['bosa_iframe_form']['bosa_iframe_code'] = array(
      '#title' => "iframe code",
      '#type' => 'textarea',
      '#value' => $html,
    );
    $form['bosa_iframe_form']['bosa_iframe_view'] = array(
      '#title' => "iframe",
      '#type' => 'fieldset',
      '#description' => $html,
    );
  }
  return $form;
}
function bosa_iframe_form_all_submit($form, &$form_state) {
  switch ($form_state['stage']) {
    case 'get_form':
      $form_state['multistep_values'][$form_state['stage']] = $form_state['values'];
        bosa_iframe_form($form, $form_state);
        $form_state['complete'] = TRUE;
      break;
  }

  if (isset($form_state['multistep_values']['form_build_id'])) {
    $form_state['values']['form_build_id'] = $form_state['multistep_values']['form_build_id'];
  }
  $form_state['multistep_values']['form_build_id'] = $form_state['values']['form_build_id'];
  //$form_state['stage'] = $form_state['new_stage'];
  $form_state['rebuild'] = TRUE;
}
/**
 * Implements hook_page_alter()
 */
function bosa_iframe_page_alter(&$page) {
  if(arg(0) == 'bosa' && arg(1) == 'iframe'){
    unset($page['page_top']);
    unset($page['footer']);
    unset($page['above-header']);
  }
}

/**
 * Implements hook_preprocess_page()
 */
function bosa_iframe_preprocess_page(&$vars, $hook) {
  if (strstr(request_uri(), 'bosa/iframe')) {
     $vars['theme_hook_suggestion'] = 'page__iframe';
  }
}

function bosa_iframe_view($type, $arg, $ids = NULL, $tid_2 = NULL,$tid_3 = NULL){
$script = "
  var qty = jQuery('.views-row').length;
  var width = 100;
  if(qty >= 4 ){
      width = 24;
  }
  if (qty == 2){
    width = 49;
  }
  if (qty == 3){
    width = 32;
  }
  if (qty == 1){
    width = 98;
  }
  jQuery('.views-row').css('width', width+'%');
  ";

  drupal_add_js($script, array('type' => 'inline', 'scope' => 'footer', 'weight' => 5));
  switch($type){
    // Product view
    // bosa/iframe/product/<s:specified/r:random>/<optional: product node ids>
    case 'product':
      $v = views_get_view('Produktvisning_paa_kategoriside');
      switch($arg){
        case 's':
          return $v->preview('panel_pane_2', array($ids));
        
        default:
          $v->set_items_per_page($ids);
          return $v->preview('panel_pane_2', array('all', $tid_2));
      }
      break;

    // Category view
    // bosa/iframe/category/<number of categories>/<category ids>
    case 'category':
      $views = '';
      $ids = explode(',', $ids);
      $i = 0;
      foreach($ids as $id){
        $v = views_get_view('kategorivisning');
        $views .=  '<div class="row-' . $i . '">' . $v->preview('panel_pane_1', array($id)) . '</div>';
        $i++;
      }
      return $views;
      break;

    case 'category_new':
        $v = views_get_view('Produktvisning_paa_kategoriside');
        $v->set_items_per_page($arg);
        return $v->preview('panel_pane_4', array($ids,$tid_2,$tid_3));
        break;
    default:
      return 'Incorrect arguments';
      break;
  }
}

